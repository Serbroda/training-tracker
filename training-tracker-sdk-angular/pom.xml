<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>de.rottstegge</groupId>
    <artifactId>training-tracker-sdk-angular</artifactId>

    <parent>
        <artifactId>training-tracker</artifactId>
        <groupId>de.rottstegge</groupId>
        <version>0.0.1-SNAPSHOT</version>
    </parent>

    <build>
        <plugins>
            <!--            <plugin>-->
            <!--                <artifactId>exec-maven-plugin</artifactId>-->
            <!--                <groupId>org.codehaus.mojo</groupId>-->
            <!--                <executions>-->
            <!--                    <execution>&lt;!&ndash; Run our version calculation script &ndash;&gt;-->
            <!--                        <id>Version Calculation</id>-->
            <!--                        <phase>generate-sources</phase>-->
            <!--                        <goals>-->
            <!--                            <goal>exec</goal>-->
            <!--                        </goals>-->
            <!--                        <configuration>-->
            <!--                            <executable>${basedir}/../scripts/generate_typescript_yaml.sh</executable>-->
            <!--                        </configuration>-->
            <!--                    </execution>-->
            <!--                </executions>-->
            <!--            </plugin>-->
            <plugin>
                <groupId>org.openapitools</groupId>
                <artifactId>openapi-generator-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <phase>generate-sources</phase>
                        <id>openapi-generator-generate</id>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                        <configuration>
                            <!-- <configHelp>true</configHelp> -->
                            <!--
                            sortParamsByRequiredFlag        Sort method arguments to place required parameters before optional parameters. (Default: true)
                            ensureUniqueParams                Whether to ensure parameter names are unique in an operation (rename parameters that are not). (Default: true)
                            allowUnicodeIdentifiers            boolean, toggles whether unicode identifiers are allowed in names or not, default is false (Default: false)
                            prependFormOrBodyParameters        Add form or body parameters to the beginning of the parameter list. (Default: false)
                            modelPropertyNaming                Naming convention for the property: 'camelCase', 'PascalCase', 'snake_case' and 'original', which keeps the original name (Default: camelCase)
                            supportsES6                        Generate code that conforms to ES6. (Default: false)
                            npmName                            The name under which you want to publish generated npm package. Required to generate a full package
                            npmVersion                        The version of your npm package. If not provided, using the version from the OpenAPI specification file. (Default: 1.0.0)
                            snapshot                        When setting this property to true, the version will be suffixed with -SNAPSHOT.yyyyMMddHHmm (Default: false)
                            npmRepository                    Use this property to set an url your private npmRepo in the package.json
                            withInterfaces                    Setting this property to true will generate interfaces next to the default class implementations. (Default: false)
                            useSingleRequestParameter        Setting this property to true will generate functions with a single argument containing all API endpoint parameters instead of one argument per parameter. (Default: false)
                            taggedUnions                    Use discriminators to create tagged unions instead of extending interfaces. (Default: false)
                            providedInRoot                    Use this property to provide Injectables in root (it is only valid in angular version greater or equal to 6.0.0). (Default: false)
                            ngVersion                        The version of Angular. (Default: 8.0.0)
                            apiModulePrefix                    The prefix of the generated ApiModule.
                            serviceSuffix                    The suffix of the generated service. (Default: Service)
                            serviceFileSuffix                The suffix of the file of the generated service (service<suffix>.ts). (Default: .service)
                            modelSuffix                        The suffix of the generated model.
                            modelFileSuffix                    The suffix of the file of the generated model (model<suffix>.ts).
                            fileNaming                        Naming convention for the output files: 'camelCase', 'kebab-case'. (Default: camelCase)
                            stringEnums                        Generate string enums instead of objects for enum values. (Default: false)
                            -->
                            <configOptions>
                                <apiModulePrefix>restmenu</apiModulePrefix>
                                <npmName>training-tracker-sdk-angular</npmName>
                                <!--<npmRepository>http://my.custom.repo</npmRepository>-->
                                <npmVersion>1.0.0</npmVersion>
                                <providedInRoot>true</providedInRoot>
                                <snapshot>false</snapshot>
                                <sortParamsByRequiredFlag>true</sortParamsByRequiredFlag>
                                <stringEnums>false</stringEnums>
                            </configOptions>
                            <generatorName>typescript-angular</generatorName>
                            <inputSpec>${basedir}/../training-tracker-v1.yml</inputSpec>
                            <output>target/generated-sources</output>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>com.github.eirslett</groupId>
                <artifactId>frontend-maven-plugin</artifactId>
                <configuration>
                    <workingDirectory>target/generated-sources</workingDirectory>
                </configuration>
                <executions>
                    <execution>
                        <id>install node and npm</id>
                        <goals>
                            <goal>install-node-and-npm</goal>
                            <goal>npm</goal>
                        </goals>
                        <phase>generate-resources</phase>
                        <configuration>
                            <nodeVersion>v14.15.5</nodeVersion>
                        </configuration>
                    </execution>
                    <execution>
                        <id>npm-run-build</id>
                        <goals>
                            <goal>npm</goal>
                        </goals>
                        <configuration>
                            <arguments>run build</arguments>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

</project>